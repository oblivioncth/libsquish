name: Build libsquish - Linux
on:
  workflow_call:
  
env:
  libsquish_src_suffix: libsquish/Source
  libsquish_src_dir: ${{ github.workspace }}/libsquish/Source
  libsquish_build_dir: ${{ github.workspace }}/libsquish/Build

jobs:
  build-libsquish:
    name: Build libsquish - Linux (Release)
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
        compiler: [{c: gcc-10, cxx: g++-10, qt: clang12}, {c: gcc-12, cxx: g++-12, qt: clang14}, {c: clang-12, cxx: clang++-12, qt: clang12}, {c: clang-14, cxx: clang++-14, qt: clang14}]
        linkage: [{type: shared, cmake_bsl: ON}, {type: static, cmake_bsl: OFF}]
        exclude:
            - os: ubuntu-20.04
              compiler: {c: gcc-12, cxx: g++-12, qt: clang14}
            - os: ubuntu-20.04
              compiler: {c: clang-14, cxx: clang++-14, qt: clang14}
            - os: ubuntu-22.04
              compiler: {c: gcc-10, cxx: g++-10, qt: clang12}
            - os: ubuntu-22.04
              compiler: {c: clang-12, cxx: clang++-12, qt: clang12}
    runs-on: ${{ matrix.os }}
    env:
      cmake_gen: Ninja Multi-Config
    steps:
    - name: Set derived variables with shell because GitHub Actions env context sucks
      run: |  
        echo "libsquish_package_path=${{ env.libsquish_build_dir }}/out/dist" >> $GITHUB_ENV
        libsquish_install_path="${{ env.libsquish_build_dir }}/out/install"
        echo "libsquish_install_path=$libsquish_install_path" >> $GITHUB_ENV
    - name: Install Doxygen
      uses: oblivioncth/actions/ubuntu/install-doxygen-from-sourceforge@dev
      with:
        version: 1.9.4
    - name: Install Graphviz
      run: sudo apt-get install graphviz
    - name: Install Ninja
      run: sudo apt-get install ninja-build
    - name: Checkout libsquish
      uses: actions/checkout@v4
      with:
        path: ${{ env.libsquish_src_suffix }}
        fetch-depth: 0 # Required for verbose versioning to work correctly
    - name: Build/Install libsquish
      working-directory: ${{ env.libsquish_src_dir }}
      run: |
        echo Configuring CMake...
        cmake -G "$cmake_gen" -S "$libsquish_src_dir" -B "$libsquish_build_dir" -D CMAKE_CXX_COMPILER="${{ matrix.compiler.cxx }}" -D CMAKE_C_COMPILER="${{ matrix.compiler.c }}" -D BUILD_SHARED_LIBS="${{ matrix.linkage.cmake_bsl }}" -D LIBSQUISH_TESTS=ON -D LIBSQUISH_DOCS=ON -D LIBSQUISH_EXTRAS=ON
        echo Changing to build directory...
        cd "$libsquish_build_dir"
        echo Building libsquish Release/Docs...
        cmake --build . --target all --config Release
        echo Installing libsquish Release/Docs
        cmake --install . --config Release
        echo Running tests...
        ctest -C Release --output-on-failure
        echo Packaging libsquish...
        cpack -C "Release"
        echo Build complete.
    - name: Get libsquish artifact name
      id: get_artifact_name
      run: |
        cpack_name=$(find "${{ env.libsquish_package_path }}" -type f -name "*.zip")
        artifact_name="$(basename "$cpack_name" .zip) [${{ matrix.compiler.cxx }}]"
        echo "current_artifact_name=$artifact_name" >> $GITHUB_ENV
    - name: Upload libsquish build artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.current_artifact_name }}
        path: ${{ env.libsquish_install_path }}
        if-no-files-found: error
