name: Build libsquish - Linux
on:
  workflow_call:
    secrets:
      qt_ffynnon_cred:
        description: 'Credentials for getting Qt from Ffynnon'
        required: true
env:
  libsquish_src_suffix: libsquish/Source
  libsquish_src_dir: ${{ github.workspace }}/libsquish/Source
  libsquish_build_dir: ${{ github.workspace }}/libsquish/Build

jobs:
  build-libsquish:
    name: Build libsquish - Linux (Release)
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
        compiler: [gcc, clang]
        lib_linkage: [shared, static]
        include:
          - os: ubuntu-20.04
            compiler: gcc
            c_comp: gcc-10
            cxx_comp: g++-10
            qt_comp: clang12
          - os: ubuntu-20.04
            compiler: clang
            c_comp: clang-12
            cxx_comp: clang++-12
            qt_comp: clang12            
          - os: ubuntu-22.04
            compiler: gcc
            c_comp: gcc-12
            cxx_comp: g++-12
            qt_comp: clang14
          - os: ubuntu-22.04
            compiler: clang
            c_comp: clang-14
            cxx_comp: clang++-14
            qt_comp: clang14
          - lib_linkage: shared
            cmake_bsl: ON
          - lib_linkage: static
            cmake_bsl: OFF
    runs-on: ${{ matrix.os }}
    env:
      cmake_gen: Ninja Multi-Config
    steps:
    - name: Set derived variables with shell because GitHub Actions env context sucks
      run: |  
        echo "libsquish_package_path=${{ env.libsquish_build_dir }}/out/dist" >> $GITHUB_ENV
        libsquish_install_path="${{ env.libsquish_build_dir }}/out/install"
        echo "libsquish_install_path=$libsquish_install_path" >> $GITHUB_ENV
    - name: Install Doxygen
      uses: oblivioncth/actions/ubuntu/install-doxygen-from-sourceforge@dev
      with:
        version: 1.9.4
    - name: Install Graphviz
      run: sudo apt-get install graphviz
    - name: Install Ninja
      run: sudo apt-get install ninja-build
    - name: Checkout libsquish
      uses: actions/checkout@v3
      with:
        path: ${{ env.libsquish_src_suffix }}
        fetch-depth: 0 # Required for verbose versioning to work correctly
    - name: Build/Install libsquish
      working-directory: ${{ env.libsquish_src_dir }}
      run: |
        echo Configuring CMake...
        cmake -G "$cmake_gen" -S "$libsquish_src_dir" -B "$libsquish_build_dir" -D CMAKE_CXX_COMPILER="${{ matrix.cxx_comp }}" -D CMAKE_C_COMPILER="${{ matrix.c_comp }}" -D BUILD_SHARED_LIBS="${{ matrix.cmake_bsl }}" -D LIBSQUISH_TESTS=ON -D LIBSQUISH_DOCS=ON
        echo Changing to build directory...
        cd "$libsquish_build_dir"
        echo Building libsquish Release/Docs...
        cmake --build . --target all --config Release
        echo Installing libsquish Release/Docs
        cmake --install . --config Release
        echo Running tests...
        cmake --build . --target test --config Release
        echo Packaging libsquish...
        cpack -C "Release"
        echo Build complete.
    - name: Get libsquish artifact name
      id: get_artifact_name
      run: |
        cpack_name=$(find "${{ env.libsquish_package_path }}" -type f -name "*.zip")
        artifact_name="$(basename "$cpack_name" .zip) [${{ matrix.cxx_comp }}]"
        echo "current_artifact_name=$artifact_name" >> $GITHUB_ENV
    - name: Upload libsquish build artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.current_artifact_name }}
        path: ${{ env.libsquish_install_path }}
        if-no-files-found: error
